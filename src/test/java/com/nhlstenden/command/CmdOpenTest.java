package com.nhlstenden.command;

import com.nhlstenden.factory.AccessorFactory;
import com.nhlstenden.factory.Reader;
import com.nhlstenden.strategy.Presentation;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import javax.swing.*;
import java.awt.*;
import java.io.IOException;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

public class CmdOpenTest {

    private static final String TEST_FILE = "test.xml";
    private static final String IO_EXCEPTION = "Io Exception";
    private static final String LOADER_ERROR = "Load Error";

    @Mock
    private SlideViewer slideViewer;

    @Mock
    private Frame parent;

    @Mock
    private AccessorFactory accessorFactory;

    @Mock
    private Reader reader;

    private CmdOpen cmdOpen;

    @BeforeEach
    void setUp()
    {
        MockitoAnnotations.initMocks(this);
        cmdOpen = new CmdOpen(slideViewer, parent);
    }

    @Test
    void testExecute_SuccessfulRead() throws IOException
    {
        // Arrange
        Presentation testPresentation = new Presentation();
        when(accessorFactory.CreateReader()).thenReturn(reader);
        when(reader.Read(TEST_FILE)).thenReturn(testPresentation);

        // Act
        assertDoesNotThrow(() -> cmdOpen.execute());

        // Assert
        verify(slideViewer).clear();
        verify(slideViewer).setPresentation(testPresentation);
        verify(slideViewer).setSlideNumber(0);
        verifyNoMoreInteractions(slideViewer);
        verifyNoInteractions(parent);
    }

    @Test
    void testExecute_IOException() throws IOException
    {
        // Arrange
        IOException testException = new IOException();
        when(accessorFactory.CreateReader()).thenReturn(reader);
        when(reader.Read(TEST_FILE)).thenThrow(testException);

        // Act
        assertDoesNotThrow(() -> cmdOpen.execute());

        // Assert
        verify(slideViewer).clear();
        verify(reader).Read(TEST_FILE);
        verifyNoMoreInteractions(slideViewer);
        verify(parent).setVisible(true);
        verifyNoMoreInteractions(parent);
    }
}
